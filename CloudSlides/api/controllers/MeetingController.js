// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = {
    create: function(req, res) {
      var holderId, pptId, topic;
      pptId = req.param('pptId');
      holderId = req.param('holderId');
      topic = req.param('topic');
      return Meeting.create({
        holder: holderId,
        ppt: pptId,
        topic: topic
      }).exec(function(err, newMeeting) {
        if (err) {
          return res.ok(err);
        }
        return res.json({
          status: 0
        });
      });
    },
    "delete": function(req, res) {
      var meetingId;
      meetingId = req.param('meetingId');
      return Meeting.destroy({
        id: meetingId
      }).exec(function(err) {
        if (err) {
          sails.log(err);
          return res.serverError(err);
        }
        return res.json({
          status: 0
        });
      });
    },
    queryAttend: function(req, res) {
      var userId;
      userId = req.param('userId');
      return User.findOne({
        id: userId
      }).populate('attendMeetings').exec(function(err, user) {
        if (err) {
          return res.serverError(err);
        }
        sails.log('queryAttend');
        sails.log(user);
        return res.json(user.attendMeetings);
      });
    },
    attend: function(req, res) {
      var meetingId, userId;
      userId = req.param('userId');
      meetingId = req.param('meetingId');
      return User.findOne({
        id: userId
      }).exec(function(err, user) {
        if (err) {
          return res.serverError(err);
        }
        sails.log('attend meeting');
        sails.log(user);
        return Meeting.findOne({
          id: meetingId
        }).exec(function(err, meeting) {
          if (err) {
            return res.serverError(err);
          }
          user.attendMeetings.add(meetingId);
          return user.save(sails.log);
        });
      });
    }
  };

}).call(this);

//# sourceMappingURL=MeetingController.map
